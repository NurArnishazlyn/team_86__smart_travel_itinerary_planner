<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Register</title>
    <link rel="stylesheet" href="/css/main.css">
    <link rel="stylesheet" href="/css/bootstrap.min.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">

    <style>
        html, body{
            margin: 0;
            padding: 0;
        }

        input:focus {
            border-color: #ff0066;
            transition: border-color 0.3s ease-in-out;
        }

        /* Set background image inside wrapper */
        .wrapper {
            display: flex;
            flex-direction: column;
            min-height: 100vh; 
            background-size: 1920px 1080px;
            background-position: center;
            background-repeat: no-repeat;
            background-attachment: fixed; 
            transition: background-image 1s ease-in-out;
        }

        .logo{
            width: 100px;
            height: 100px;
            border-radius: 50%;
        }

        .container-start{
            background-color: pink;
        }

        .btn{
            background-color: palevioletred;
        }

        .btn:hover{
            background-color: rgb(228, 36, 100);
            transition: 0.7s;
        }

        body{
            background: white;
        }

        .main-content{
            flex: 1;
        }

        .footer{
            background-color: pink;
        }

        .ft-container p{
            color: white;
        }
    </style>
</head>
<body>
    <!-- Header Section -->
    <div class="wrapper">
        <div class="container-start p-3 d-flex border-bottom justify-content-between align-items-center">
            <a href="/">
                <img src="/images/logo.png" alt="Logo" class="logo">
            </a>
        </div>

        <!-- Register Section -->
        <div class="d-flex justify-content-center align-items-center min-vh-100">
            <div class="card p-4 shadow-lg" style="width: 350px;">
                <h2 class="text-center mb-3">Sign Up</h2>

                <!-- Success & Error Message -->
                <div id="error-message" class="alert alert-danger text-center d-none mt-3"></div>
                <div id="success-message" class="alert alert-success text-center d-none mt-3"></div>

                <!-- Register Form -->
                <form id="register-form" action="/register" method="POST">

                    <div class="mb-3">
                        <input type="text" id="full_name" name="full_name" class="form-control" placeholder="Full Name" required>
                    </div>

                    <div class="mb-3">
                        <input type="text" id="username" name="username" class="form-control" placeholder="Username" required>
                    </div>

                    <div class="mb-3">
                        <input type="email" id="email" name="email" class="form-control" placeholder="Email" required>
                    </div>

                    <div class="mb-3">
                        <input type="tel" id="phone" name="phone" class="form-control" placeholder="Phone Number" required>
                    </div>

                    <div class="mb-3 position-relative">
                        <input type="password" id="newPassword" name="password" class="form-control" placeholder="Password" required>
                        <i class="bi bi-eye-slash" id="toggle-password" style="position: absolute; right: 10px; top: 10px; cursor: pointer;"></i>
                    </div>

                    <div class="mb-3 position-relative">
                        <input type="password" id="confirmPassword" name="confirm_password" class="form-control" placeholder=" Confirm Password" required>
                        <i class="bi bi-eye-slash" id="toggle-confirm-password" style="position: absolute; right: 10px; top: 10px; cursor: pointer;"></i>
                    </div>

                    <!-- Terms and Condition Checkbox: -->
                    <div class="text-center mb-3">
                        <small>
                            <input type="checkbox" id="terms" required>
                            <label for="terms">I agree to the <a href="/terms" target="_blank">Terms and Conditions</a></label>
                        </small>
                    </div>
                    
                    <button type="submit" id="register-btn" class="btn w-100 text-white">Sign Up</button>
                </form>

                <!-- Login & Home Links -->
                <div class="text-center mt-3">
                  <small>Already have an account? <a href="/login" class="text-decoration-none">Login</a></small></br> 
                  <small><a href="/" class="text-decoration-none">Back to Home</a></small>
              </div>
            </div>
        </div>

    </div>

    <!-- Footer Section -->
    <footer class="footer p-3 border-top">
        <div class="ft-container text-center">
            <p>&copy; 2025 Travel Itinerary Planner from Team 86. All Rights Reserved</p>
            <div class="d-flex justify-content-center">
                <a href="/" class="me-3 text-white"><i class="bi bi-facebook"></i></a>
                <a href="/" class="me-3 text-white"><i class="bi bi-instagram"></i></a>
                <a href="/" class="me-3 text-white"><i class="bi bi-twitter-x"></i></a>
            </div>
        </div>
    </footer>

    <!-- Bootstrap JS Bundle -->
    <script src="/js/bootstrap.min.js"></script>

    <!-- JavaScript Logic -->
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/;
            const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
            const phoneRegex = /^[+]?[(]?[0-9]{1,4}[)]?[-\s./0-9]*$/;

            const errorMsg = document.getElementById("error-message");
            const successMsg = document.getElementById("success-message");
            const registerForm = document.getElementById("register-form");

            if (!errorMsg || !successMsg || !registerForm) {
                console.error("Missing required elements in HTML");
                return;
            }

            registerForm.addEventListener("submit", function (event) {
                if (!validateForm(event)) {
                    event.preventDefault();
                }
            });
        

            // Function to validate form input
            function validateForm(event) {
                event.preventDefault(); // Prevent form submission until validation passes

                const username = document.getElementById("username").value;
                const email = document.getElementById("email").value;
                const phone = document.getElementById("phone").value;
                const password = document.getElementById("newPassword").value;
                const confirmPassword = document.getElementById("confirmPassword").value;

                console.log("Validating form..."); // Debugging

                // Clear previous messages
                errorMsg.style.display = "none";
                successMsg.style.display = "none";
                errorMsg.innerHTML = "";

                // Clear previous error message
                // errorMsg.classList.add("d-none");
                // successMsg.classList.add("d-none");

                // Validate Username
                if (username.length < 3) {
                    showError("Username must be at least 3 characters long!");
                    return false;
                }

                // Validate Email
                if (!emailRegex.test(email)) {
                    showError("Invalid email format!");
                    return false;
                }

                // Validate Phone Number
                if (!phoneRegex.test(phone)) {
                    showError("Invalid phone number format!");
                    return false;
                }

                // Validate Password
                if (!passwordRegex.test(password)) {
                    showError("Password must be:<br>- At least 8 characters long<br>- Include an uppercase letter<br>- Include a lowercase letter<br>- Include a number<br>- Include a special character (@$!%*?&)");
                    return false;
                }

                // Validate Passwords Match
                if (password !== confirmPassword) {
                    showError("Passwords do not match!");
                    return false;
                }

                // If all validations pass, show success message
                showSuccess("Registration successful! You can now log in.");
                return true;
            }

            // Display error message
            function showError(message) {
                errorMsg.innerHTML = message;
                errorMsg.style.display = "block"; // Ensure it shows up
                console.log("Error:", message);
            }

            // Display success message
            function showSuccess(message) {
                successMsg.innerHTML = message;
                successMsg.style.display = "block"; // Ensure it shows up
                console.log("Success:", message);

            }

            // // Attach event listener
            // registerForm.addEventListener("submit", function (event) {
            //     if (!validateForm(event)) {
            //         event.preventDefault();
            //     }
            // });

            // Toggle Password Visibility
            function togglePasswordVisibility(inputId, iconId) {
                const passwordField = document.getElementById(inputId);
                const eyeIcon = document.getElementById(iconId);

                const isPassword = passwordField.type === "password";
                passwordField.type = isPassword ? "text" : "password";
                eyeIcon.classList.toggle("bi-eye-slash", isPassword);
                eyeIcon.classList.toggle("bi-eye", !isPassword);
            }

            // Attach event listeners to toggle password visibility
            document.getElementById("toggle-password").addEventListener("click", function () {
                togglePasswordVisibility("newPassword", "toggle-password");
            });

            document.getElementById("toggle-confirm-password").addEventListener("click", function () {
                togglePasswordVisibility("confirmPassword", "toggle-confirm-password");
            });

            // Background image array
            const images = ["/images/p1.jpg", "/images/p2.jpg", "/images/p3.jpg"];
            let index = 0;

            // Function to change background image
            function changeBackground() {
                document.querySelector(".wrapper").style.backgroundImage = `url('${images[index]}')`;
                index = (index + 1) % images.length;
            }

            // Change background every 10 seconds
            setInterval(changeBackground, 10000);
            changeBackground();  // Set initial background image
        });
    </script>        
</body>
</html>
